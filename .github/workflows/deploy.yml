name: CI/CD Pipeline for Google Kubernetes Engine

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Define environment variables for reusability
      - name: Set environment variables
        run: |
          echo "IMAGE_NAME=europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/portfolio-repo/react-app" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++

      # Install npm dependencies
      - name: Install npm dependencies
        run: npm ci

      # Run tests
      - name: Run Tests
        run: npm test -- --watchAll=false

      # Build the React app
      - name: Build the app
        run: npm run build

      # Set up gcloud SDK and authenticate
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      # Authenticate Docker with Artifact Registry
      - name: Authenticate Docker with Artifact Registry
        run: |
          gcloud auth configure-docker europe-north1-docker.pkg.dev

      # Build and push Docker image with caching
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Define environment variables for reusability
      - name: Set environment variables
        run: |
          echo "IMAGE_NAME=europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/portfolio-repo/react-app" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up gcloud SDK and authenticate
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
          install_components: |
            kubectl
            gke-gcloud-auth-plugin

      # Get GKE credentials
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: portfolio-cluster-1
          location: europe-north1
          credentials: ${{ secrets.GCP_CREDENTIALS }}

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/react-app react-app=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          kubectl apply -f k8s/service.yaml
